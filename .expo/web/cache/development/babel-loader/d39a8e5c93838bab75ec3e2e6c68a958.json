{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/vincent/E0D84BC6D84B9A24/Users/Vincent/Desktop/CODE/REACT NATIVE/signal-clone/screens/AddChat.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { db } from \"../firebase\";\n\nvar AddChat = function AddChat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var createChat = function createChat() {\n    return _regeneratorRuntime.async(function createChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('chats').add({\n              chatName: input\n            }).then(function () {\n              navigation.goBack();\n            }).catch(function (error) {\n              return alert(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    leftIcon: React.createElement(Icon, {\n      name: \"wechat\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }\n    }),\n    placeholder: \"Enter a chat name\",\n    value: input,\n    onChangeText: function onChangeText(input) {\n      return setInput(input);\n    },\n    onSubmitEditing: createChat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: createChat,\n    title: \"Create new Chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AddChat;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 30,\n    height: \"100%\"\n  }\n});","map":{"version":3,"sources":["/media/vincent/E0D84BC6D84B9A24/Users/Vincent/Desktop/CODE/REACT NATIVE/signal-clone/screens/AddChat.js"],"names":["React","useState","Input","Button","Icon","db","AddChat","navigation","input","setInput","createChat","collection","add","chatName","then","goBack","catch","error","alert","styles","container","StyleSheet","create","backgroundColor","padding","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AACA,OAAOC,IAAP;AACA,SAASC,EAAT;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAClC,kBAA0BN,QAAQ,EAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTL,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AAC7BC,cAAAA,QAAQ,EAAEL;AADmB,aAA3B,EAEHM,IAFG,CAEE,YAAK;AACTP,cAAAA,UAAU,CAACQ,MAAX;AACH,aAJK,EAIHC,KAJG,CAIG,UAAAC,KAAK;AAAA,qBAAIC,KAAK,CAACD,KAAD,CAAT;AAAA,aAJR,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAE,EAA1B;AAA8B,MAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAEZ,KAHT;AAIE,IAAA,YAAY,EAAE,sBAACA,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,KAJhB;AAKE,IAAA,eAAe,EAAEE,UALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,UAAjB;AAA6B,IAAA,KAAK,EAAC,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CArBD;;AAuBA,eAAeJ,OAAf;AAEA,IAAMa,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,eAAe,EAAE,OADV;AAEPC,IAAAA,OAAO,EAAE,EAFF;AAGPC,IAAAA,MAAM,EAAC;AAHA;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Input, Button } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { db } from \"../firebase\";\n\nconst AddChat = ({ navigation }) => {\n  const [input, setInput] = useState();\n  const createChat = async () => { \n      await db.collection('chats').add({\n          chatName: input\n      }).then(()=> {\n          navigation.goBack();  \n      }).catch(error => alert(error))\n  };\n  return (\n    <View style={styles.container}>\n      <Input\n        leftIcon={<Icon name=\"wechat\" size={24} color=\"black\" />}\n        placeholder=\"Enter a chat name\"\n        value={input}\n        onChangeText={(input) => setInput(input)}\n        onSubmitEditing={createChat}\n      />\n      <Button onPress={createChat} title=\"Create new Chat\" />\n    </View>\n  );\n};\n\nexport default AddChat;\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        padding: 30,\n        height:\"100%\"\n    }\n});\n"]},"metadata":{},"sourceType":"module"}